server:
  port: ${PORT:8081}

  
      
spring:
  
  Application:
    name: product-api
  
        
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    mode: always
    initialize: true
    spring.sql.init.continue-on-error: true
    spring.sql.init.platform: postgresql
    maxActive: 3

    
  jpa:
    hibernate:
      ddl-auto: create-drop
      format_sql: true
    show_sql: true
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
   
  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USER:guest}
    password: ${RABBIT_MQ_PASSWORD:guest}
    virtual-host: ${RABBIT_MQ_VHOST:}
  
     
  app-config:
  
    services:
      sales: http://${SALES_HOST:localhost}:${SALES_PORT:8082}
    
    secrets:
      token-secret: ${SECRET}

  rabbit:
    exchange:
      product: product.topic
      
    routingKey:
      product-stock: product-stock-update.routingKey
      sales-confirmation: sales-confirmation.routingKey
      
    queue:
      product-stock: product-stock-update.queue
      sales-confirmation: sales-confirmation.queue     
  